{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Purpose","text":"<p>Hello, my name is Xander Heafey. This website is designed to catalog the process used to make my own sub system. Links to related pages are below. </p> <p>Block Diagram Component Selection Schematic Bill of Materials Link To Team Site</p>","tags":["tag1","tag2"]},{"location":"BOM/","title":"Bill of Materials","text":"<p> PDF</p> <p>Above is my bill of materials. Due to shipping cost, regarding the 3.3v regulator. The initial OLED screen I choose was just to expensive. Therefore I selected a version that we would be using in class so that I would not have to purchase it. A pdf was provided so that you could click on the links. </p>"},{"location":"Block-Diagram/","title":"Block Diagram","text":"<p>This block diagram was made to fulfill the need for a human interface for my teams project. None of the part numbers have been selected due to not choosing parts as of yet. This system is designed to display a planet to the user and then with a series of inputs, would be able to see the equivalent gravity of said planet. Also the units for the planets gravity would change with an input. More information about my teams subsystem can be found here.</p>"},{"location":"Component-Selection/","title":"Component Selection","text":""},{"location":"Component-Selection/#33-switching-regulator","title":"3.3 Switching Regulator","text":""},{"location":"Component-Selection/#option-1","title":"Option 1","text":"Solution Pros Cons  $1.86 per LM2575D2T-3.3G Link 1. Experience with this component before2. Fixed3.Easier to surface mount by hand 1. Large Surface mount component"},{"location":"Component-Selection/#option-2","title":"Option 2","text":"Solution Pros Cons  $1.42 per TPS62152RGTR Link 1. Takes less space on pcb2. Cheapest component3. Fixed 1. Harder to surface mount due to size and pin orientation.2. More components on for recommended circuit."},{"location":"Component-Selection/#option-3","title":"Option 3","text":"Solution Pros Cons  $1.56 per LM3671MF-3.3/NOPB Link 1. Smallest component2. Surface mounting easier due to pin orientation. 1. Input voltage is only from 3-5.5v2. Max current out is 500mA (Might not be a con depending on what other components I select)"},{"location":"Component-Selection/#selection","title":"Selection","text":"<p>I am choosing option 1 or The LM2575D2T because of its ease to surface mount and also the fact that I have made circuits with this component before. I do not believe that its size will be a problem in the construction of my subsystem as of right now. Also it could easily connect to different power supplies based off the input voltage variance given in the data sheet. </p>"},{"location":"Component-Selection/#oled-screen","title":"OLED Screen","text":""},{"location":"Component-Selection/#option-1_1","title":"Option 1","text":"Solution Pros Cons  $22.06 Ext Price MDOB128064V2V-WI Link 1. Simple layout2. Easy to wire3. Initialization code in the datasheet 1. Can only buy in quantities of 2"},{"location":"Component-Selection/#option-2_1","title":"Option 2","text":"Solution Pros Cons  $11.25 per AOM12864A0-0.96WW-ANO Link 1. Simple data sheet2. Cheaper price 1. Only monochrome white2. SPI communication meaning more inputs"},{"location":"Component-Selection/#option-3_1","title":"Option 3","text":"Solution Pros Cons  $25.91 per NHD-1.8-160128UBC3 Link 1. Bigger screen2. RGB customization 1. Extra layers of complexity due to its 20 connections.2. Most expensive."},{"location":"Component-Selection/#selection_1","title":"Selection","text":"<p>I will be choosing option 1. The MDOB128064V2V-WI comes with two screens at the price of $22.06. Although the screens are small, it would be possible to have two screens instead of one for my block diagram. One screen could display a planet and the other would be able to display the planets info. Also, having two screen may make it easier to view sensor data and turn of GPIO pins. </p>"},{"location":"Component-Selection/#input-interface","title":"Input Interface","text":""},{"location":"Component-Selection/#option-1_2","title":"Option 1","text":"Solution Pros Cons  $2.18 per JS1300AQ Link 1. Conveniently packaged2. Simple data sheet 1. Price relative to other pushbuttons2. Might press buttons on accident"},{"location":"Component-Selection/#option-2_2","title":"Option 2","text":"Solution Pros Cons  $0.25 per TL3301NF160QG-KR Link 1. Simple and effective2. Very cheap 1. Need multiple for an interface to function"},{"location":"Component-Selection/#option-3_2","title":"Option 3","text":"Solution Pros Cons  $3.71 per JS5208 Link 1. Compact Package2. Simple surface mounting 1. Most expensive option"},{"location":"Component-Selection/#selection_2","title":"Selection","text":"<p>The JS5208 joystick button seems to be a good option. Although it is expensive, there does not seem to be much room for error when surface mounting. It is a small package, making the human interface much easier to use.</p>"},{"location":"Component-Selection/#esp32-s3-wroom-1-n4","title":"ESP32-S3-WROOM-1-N4","text":"ESP Info Answer Model ESP32-S3 Product Page URL Link ESP32-S3-WROOM-1-N4 Datasheet URL Datasheet ESP32 S3 Datasheet URL Datasheet ESP32 S3 Technical Reference Manual URL Technical Manual Vendor link DigiKey Code Examples Github External Resources URL(s) Youtube Unit cost $2.95 Absolute Maximum Current for entire IC .5A Supply Voltage Range 3.0(min)/3.3(nominal)/3.6(max) Maximum GPIO current  (per pin) 40mA Supports External Interrupts? Yes Required Programming Hardware, Cost, URL Link"},{"location":"Component-Selection/#rational-for-esp32","title":"Rational for ESP32","text":"<p>I choose the ESP32 because of the ability for any GPIO pin to work with I2C. I2C is crucial for my OLED screen, therefore this really mattered. I also like the interface of the ESP32 on VSCode. I feel much more confortable working with the ESP32 and with it being nearly $3, I can afford to mess up. </p>"},{"location":"Component-Selection/#my-role","title":"My Role","text":"<p>My Team is creating a project that simulates the equivalent gravity on certain planet in the solar system. My role is to create a HMI subsystem so that information about planets can be displayed. The HMI must also be able to toggle pins on and off and display sensor data. That stuff would be for my team and not the user. This information however would still be useful however. My role on my team is to also record notes and be good a documenting data when in team meetings. </p>"},{"location":"Component-Selection/#hmi-needs-for-esp-32","title":"HMI Needs For ESP 32","text":"Module # Available Needed Pins chosen UART 8 2 IO17,I018 I2C 39 2 IO7, IO8 GPIO 39 3 IO4, IO5, IO6 USB Programmer 4 2 TXD0, RXD0"},{"location":"Schematic/","title":"HMI Subsystem","text":"<p>This schematic is my first revision for an OLED HMI subsystem. Design choices regarding the microcontroller were made according to the ESP 32 datasheet. On page 42, there is a section describing what basic peripherals should look like. This included the EN and Boot functions that the board provides. A descrption of each section will be provided bellow.</p> <p>The Human Interface is a joystick like button that allows users to scroll up, down, and selected on the OLED screen. The header pins are used to connect to an OLED screen because there are close to no options for an OLED surface mount system. The daisy chain layout is there to provide back and forth communication for all subsystems. The system can also be powered via the daisy chain and also pass the power along it. Speaking of power, the 3.3v switching regulator mirror is datasheet schematic. It also is recommended that a power supply 4.75v to 40v is selected to insure the the board will always function..</p> <p>All parts at the time of making the schematic, are able to be bought off of Digikey. Links to the Packed Altium Project and PDF Schematics are below. </p> <p>PDF Zip</p>"},{"location":"Schematic/#power-budget","title":"Power Budget","text":"<p>The power budget bellow describes the absolute current that each major component either supplys or demands. With this in mind, it confirms that every major can be powered and given enough current to function. </p> <p> PDF</p>"},{"location":"charts/","title":"Charts","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"This is the index to a subfolder","text":"<p>Things to discuss</p>"},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}